generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

// THE VOID

model users {
  id        Int         @id @default(autoincrement())
  name      String?
  passwords passwords[]
  posts     posts[]
}

model passwords {
  id       Int    @id @default(autoincrement())
  user_id  Int
  password String
  users    users  @relation(fields: [user_id], references: [id])
}

model posts {
  id          Int       @id @default(autoincrement())
  user_id     Int
  text        String?
  create_time DateTime? @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  users       users     @relation(fields: [user_id], references: [id])
}

// SPHERES

model spheres_users {
  id      Int               @id @default(autoincrement())
  name    String
  posts   spheres_posts[]
  spheres spheres_spheres[]
}

model spheres_spheres {
  id    Int             @id @default(autoincrement())
  posts spheres_posts[]

  spheres_users   spheres_users? @relation(fields: [spheres_usersId], references: [id])
  spheres_usersId Int
}

model spheres_posts {
  id          Int       @id @default(autoincrement())
  create_time DateTime? @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)

  title   String
  content String

  spheres   spheres_spheres @relation(fields: [sphere_id], references: [id])
  sphere_id Int

  spheres_users   spheres_users? @relation(fields: [spheres_usersId], references: [id])
  spheres_usersId Int
}
